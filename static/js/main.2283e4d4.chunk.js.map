{"version":3,"sources":["components/Card.jsx","components/CardList.jsx","components/SearchBox.jsx","components/Scroll.jsx","components/ErrorBoundary.jsx","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","CardList","cats","cardComponent","map","user","i","SearchBox","searchChange","htmlFor","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchField","target","value","fetch","then","response","json","users","filteredCats","filter","cat","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAqBeA,EAlBF,SAACC,GAAW,IACfC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,MAAOC,EAAOH,EAAPG,GACrB,OACE,sBAAKC,UAAU,qDAAf,UACE,qBAAKC,IAAI,MAAMC,IAAG,+BAA0BH,EAA1B,4BAClB,gCACE,6BAAKF,IACL,4BAAIC,WCOGK,EAbE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACZC,EAAgBD,EAAKE,KAAI,SAACC,EAAMC,GACpC,OAAO,cAAC,EAAD,CAAcT,GAAIK,EAAKI,GAAGT,GAAIF,KAAMO,EAAKI,GAAGX,KAAMC,MAAOM,EAAKI,GAAGV,OAAtDU,MAGpB,OACE,8BACGH,KCSQI,EAjBG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,sBAAKV,UAAU,KAAf,UACE,uBAAOW,QAAQ,OAAOX,UAAU,uBAAhC,uBACA,uBACEA,UAAU,4CACVY,KAAK,SACLC,YAAY,cACZhB,KAAK,cACLiB,SAAUJ,QCCHK,EAVA,SAAAnB,GACb,OACE,qBAAKoB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAO,SAApE,SACGvB,EAAMwB,YCkBEC,E,kDApBb,WAAYzB,GAAQ,IAAD,8BACjB,cAAMA,IACD0B,MAAO,CACVC,UAAU,GAHK,E,qDAOnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG5B,WACE,OAAGG,KAAKJ,MAAMC,SACL,+DAEFG,KAAK9B,MAAMwB,a,GAhBMQ,aCgDbC,G,8DAxCb,aAAe,IAAD,8BACZ,gBAcFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAd1C,EAAKZ,MAAQ,CACXlB,KAAM,GACN4B,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBG,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAW,EAAKZ,SAAS,CAAEvB,KAAMmC,S,oBAQ3C,WAAU,IAAD,EACuBb,KAAKJ,MAA3BlB,EADD,EACCA,KAAM4B,EADP,EACOA,YACRQ,EAAepC,EAAKqC,QAAO,SAAAC,GAC/B,OAAOA,EAAI7C,KAAK8C,cAAcC,SAASZ,EAAYW,kBAErD,OAASvC,EAAKyC,OAGV,sBAAK7C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,wBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU1B,KAAMoC,WAPxB,6C,GA1BYZ,cCEHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2283e4d4.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Card = (props) => {\r\n  const { name, email, id } = props;\r\n  return (\r\n    <div className='tc bg-light-pink dib br3 pa3 ma2 grow bu2 shadow-5'>\r\n      <img alt='cat' src={`https://robohash.org/${id}?set=set4&size=200x200`} />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nCard.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  email: PropTypes.string.isRequired,  \r\n}\r\n\r\nexport default Card\r\n\r\n\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({ cats }) => {\r\n  const cardComponent = cats.map((user, i) => {\r\n    return <Card key={i} id={cats[i].id} name={cats[i].name} email={cats[i].email} />\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      {cardComponent}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default CardList\r\n","import React, { useState } from 'react'\r\n//import 'tachyons';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n  return (\r\n    <div className=\"tc\">\r\n      <label htmlFor=\"name\" className=\"tc f6 b w-25 pa2 mb2\">Cat Name:</label>\r\n      <input \r\n        className='input-reset ba b--dark-pink  pa2 mb2 w-25'\r\n        type=\"search\" \r\n        placeholder=\"search cats\" \r\n        name=\"searchField\"\r\n        onChange={searchChange}/>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default SearchBox\r\n","import React from 'react';\r\n\r\n\r\nconst Scroll = props => {\r\n  return (\r\n    <div style={{overflowY: 'scroll', border: '5px solid black', height:'800px'}}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Scroll\r\n","import React, { Component } from 'react'\r\n\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n      hasError: false\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true })\r\n  }\r\n  \r\n  render() {\r\n    if(this.state.hasError) {\r\n      return <h1>Ooooooooops. That is not good</h1>\r\n    }\r\n    return this.props.children\r\n  }\r\n}\r\n\r\n\r\nexport default ErrorBoundary\r\n","import React, { Component } from 'react';\nimport CardList from '../components/CardList'\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport 'tachyons';\nimport './App.css';\n\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      cats: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => { this.setState({ cats: users }) })\n  }\n\n\n  onSearchChange = (event) => {\n    this.setState({ searchField: event.target.value })\n  }\n\n  render() {\n    const { cats, searchField } = this.state\n    const filteredCats = cats.filter(cat => {\n      return cat.name.toLowerCase().includes(searchField.toLowerCase());\n    })\n    return (!cats.length) ?\n      <h1>Loading</h1> :\n      (\n        <div className=\"tc\" >\n          <h1 className='f1'>Catfriends</h1>\n          <SearchBox searchChange={this.onSearchChange} />\n          <Scroll>\n            <ErrorBoundary>\n              <CardList cats={filteredCats} />\n            </ErrorBoundary>\n          </Scroll>\n        </div>\n      );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}